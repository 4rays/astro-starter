---
if (Astro.locals.user?.id) return Astro.redirect("/dashboard");
import Layout from "@/layouts/Layout.astro";
import {actions, isInputError} from "astro:actions";
import {Button} from "@/components/primitives/button";
import PasswordField from "@/components/PasswordField.svelte";

const errors = {
  newPassword: "",
  confirmPassword: "",
  server: "",
  invalidToken: "",
};

const fields = {
  newPassword: "",
  confirmPassword: "",
};

const token = Astro.url.searchParams.get("token");

if (!token) {
  return Astro.redirect("/sign-in");
}

if (Astro.request.method === "POST") {
  const error = Astro.url.searchParams.get("error");

  if (error === "invalid_token") {
    errors.invalidToken = "This link is invalid or expired.";
  } else if (token) {
    const formData = await Astro.request.formData();
    const {data, error} = await Astro.callAction(
      actions.authentication.resetPassword,
      {
        newPassword: formData.get("newPassword") as string,
        confirmPassword: formData.get("confirmPassword") as string,
        token,
      },
    );

    if (error) {
      if (isInputError(error)) {
        errors.newPassword = error.fields.newPassword?.join(", ") ?? "";
        errors.confirmPassword = error.fields.confirmPassword?.join(", ") ?? "";
      } else {
        errors.server = error.message;
      }
    } else if (data?.redirect) {
      return Astro.redirect(data.redirect);
    }
  }
}
---

<Layout>
  <div
    class="flex flex-col items-center justify-center w-full py-12 min-h-[70dvh]"
  >
    <div class="w-full max-w-xs">
      <h1 class="text-2xl font-bold mb-8 text-center">Reset Password</h1>
      {
        errors.invalidToken ? (
          <p class="text-center text-sm mt-4">{errors.invalidToken}</p>
        ) : (
          <form method="POST" class="space-y-4">
            <PasswordField
              required
              name="newPassword"
              placeholder="New Password"
              client:load
              value={fields.newPassword}
            />

            <div class="mb-4" />

            {errors.newPassword && (
              <span class="text-red-500 text-xs ml-2" id="error">
                {errors.newPassword}
              </span>
            )}

            <PasswordField
              required
              name="confirmPassword"
              placeholder="Confirm Password"
              client:load
              value={fields.confirmPassword}
            />
            {errors.confirmPassword && (
              <span class="text-red-500 text-xs ml-2" id="error">
                {errors.confirmPassword}
              </span>
            )}

            {errors.server && (
              <span class="text-red-500 text-xs ml-2" id="error">
                {errors.server}
              </span>
            )}

            <Button type="submit" class="w-full mt-4">
              Reset Password
            </Button>
          </form>
        )
      }
    </div>
  </div>
</Layout>
