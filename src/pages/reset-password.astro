---
if (Astro.locals.user?.id) return Astro.redirect("/dashboard");
import Layout from "@/layouts/Layout.astro";
import {actions, isInputError} from "astro:actions";
import {Input} from "@/components/primitives/input";

const errors = {
  newPassword: "",
  confirmPassword: "",
  server: "",
};

if (Astro.request.method === "POST") {
  const token = Astro.url.searchParams.get("token");

  if (!token) {
    return Astro.redirect("/sign-in");
  } else {
    const formData = await Astro.request.formData();
    const {data, error} = await Astro.callAction(
      actions.authentication.resetPassword,
      {
        newPassword: formData.get("newPassword") as string,
        confirmPassword: formData.get("confirmPassword") as string,
        token,
      },
    );

    if (error) {
      if (isInputError(error)) {
        errors.newPassword = error.fields.newPassword?.join(", ") ?? "";
        errors.confirmPassword = error.fields.confirmPassword?.join(", ") ?? "";
      } else {
        errors.server = error.message;
      }
    } else if (data?.redirect) {
      return Astro.redirect(data.redirect);
    }
  }
}
---

<Layout>
  <div
    class="flex flex-col items-center justify-center w-full py-12 min-h-[70dvh]"
  >
    <div class="w-full max-w-xs">
      <h1 class="text-2xl font-bold mb-8 text-center">Reset Password</h1>
      <form method="POST" class="space-y-4">
        <div
          class="relative flex items-center rounded-md border focus-within:ring-1 focus-within:ring-ring pl-2"
        >
          <Input
            type="password"
            placeholder="New Password"
            class="border-0 focus-visible:ring-0 shadow-none bg-transparent dark:bg-transparent"
            name="newPassword"
          />
          {
            errors.newPassword && (
              <span class="text-red-500 text-xs ml-2" id="error">
                {errors.newPassword}
              </span>
            )
          }
        </div>
        <div
          class="relative flex items-center rounded-md border focus-within:ring-1 focus-within:ring-ring pl-2"
        >
          <Input
            type="password"
            placeholder="Confirm Password"
            class="border-0 focus-visible:ring-0 shadow-none bg-transparent dark:bg-transparent"
            name="confirmPassword"
          />
          {
            errors.confirmPassword && (
              <span class="text-red-500 text-xs ml-2" id="error">
                {errors.confirmPassword}
              </span>
            )
          }
        </div>
        {
          errors.server && (
            <span class="text-red-500 text-xs ml-2" id="error">
              {errors.server}
            </span>
          )
        }
      </form>
    </div>
  </div>
</Layout>
